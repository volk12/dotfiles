# ~/.zshrc - Managed by Chezmoi

# ------------------------------------------------------------------------------
# 1. Base Zsh Settings and Options
# ------------------------------------------------------------------------------

# Change directory just by typing its name
setopt autocd

# Auto correct mistakes
#setopt correct

# Allow comments in interactive mode
setopt interactivecomments

# Enable filename expansion for arguments of the form 'anything=expression'
setopt magicequalsubst

# Hide error message if there is no match for the pattern
setopt nonomatch

# Report the status of background jobs immediately
setopt notify

# Sort filenames numerically when it makes sense
setopt numericglobsort

# Enable command substitution in prompt
setopt promptsubst

# Remove backslash from WORDCHARS (for better word selection with paths)
WORDCHARS=${WORDCHARS//\/}

# Hide EOL sign ('%')
PROMPT_EOL_MARK=""

# ------------------------------------------------------------------------------
# 2. PATH Management
# ------------------------------------------------------------------------------

# Add ~/bin to PATH if it exists and is not already in PATH
if [ -d "$HOME/bin" ] && [[ ":$PATH:" != *":$HOME/bin:"* ]]; then
    export PATH="$HOME/bin:$PATH"
fi

# Add ~/.local/bin to PATH if it exists and is not already in PATH
if [ -d "$HOME/.local/bin" ] && [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# ------------------------------------------------------------------------------
# 3. History Configuration
# ------------------------------------------------------------------------------

HISTFILE="$HOME/.zsh_history" # Store history in a dedicated file
HISTSIZE=1000                  # Number of history entries to keep in memory
SAVEHIST=2000                  # Number of history entries to save to HISTFILE

# History options
setopt hist_expire_dups_first # Delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # Ignore duplicated commands in history list
setopt hist_ignore_space      # Ignore commands that start with space
setopt hist_verify            # Show command with history expansion before running it
# setopt share_history        # Share command history data (uncomment if desired)

# Force zsh to show the complete history
alias history="history 0"

# ------------------------------------------------------------------------------
# 4. Oh My Zsh Configuration and Sourcing
# ------------------------------------------------------------------------------

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set theme and plugins
ZSH_THEME="" # Or any other theme you prefer
plugins=(
  git
  # Add other plugins here.
  # For syntax highlighting: zsh-syntax-highlighting
  # For autosuggestions: zsh-autosuggestions
  # Example:
  # zsh-syntax-highlighting
  # zsh-autosuggestions
  # colored-man-pages
  # z
  # web-search
  # history
)

# Source Oh My Zsh. This must be at the end of the OMZ config block.
source "$ZSH/oh-my-zsh.sh"

# ------------------------------------------------------------------------------
# 5. Zsh Completion
# (Oh My Zsh often handles `compinit` and basic zstyle,
# but custom styles can go here after OMZ sourcing)
# ------------------------------------------------------------------------------

# If not using OMZ completion plugin, ensure compinit is called once.
# If OMZ is active, it likely calls this. Leave commented out if using OMZ.
# autoload -Uz compinit
# compinit -d "$HOME/.cache/zcompdump"

# Your custom completion styles (these can remain as they are)
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' rehash true
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# Take advantage of $LS_COLORS for completion as well (keep this here)
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'


# ------------------------------------------------------------------------------
# 6. Starship Prompt Configuration
# (Must be loaded after Oh My Zsh if you use OMZ, to override/integrate)
# ------------------------------------------------------------------------------

# Disable virtualenv prompt from other sources if Starship handles it
VIRTUAL_ENV_DISABLE_PROMPT=1

# Initialize Starship - this must be placed at the very end of .zshrc
# or after any other prompt configurations you want it to override.
eval "$(starship init zsh)"

# ------------------------------------------------------------------------------
# 7. Keybindings
# ------------------------------------------------------------------------------

bindkey -e # emacs key bindings
bindkey ' ' magic-space      # Do history expansion on space
bindkey '^U' backward-kill-line # Ctrl + U
bindkey '^[[3;5~' kill-word  # Ctrl + Supr
bindkey '^[[3~' delete-char  # Delete
bindkey '^[[1;5C' forward-word # Ctrl + ->
bindkey '^[[1;5D' backward-word # Ctrl + <-
bindkey '^[[5~' beginning-of-buffer-or-history # Page up
bindkey '^[[6~' end_of_buffer_or_history # Page down
bindkey '^[[H' beginning-of-line # Home
bindkey '^[[F' end-of-line    # End
bindkey '^[[Z' undo          # Shift + Tab undo last action

# ------------------------------------------------------------------------------
# 8. Aliases and Custom Functions
# ------------------------------------------------------------------------------

# Configure `time` format
TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S\ncpu\t%P'

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set environment variables for LESS to enable colors
export LESS_TERMCAP_mb=$'\E[1;31m' # begin blink
export LESS_TERMCap_md=$'\E[1;36m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m' # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m' # begin underline
export LESS_TERMCAP_ue=$'\E[0m' # reset underline

# Enable color support for ls, grep, diff, ip
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    export LS_COLORS="$LS_COLORS:ow=30;44:" # Fix ls color for folders with 777 permissions

    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias diff='diff --color=auto'
    alias ip='ip --color=auto'
fi

# More ls aliases
alias ll='ls -halF'
alias la='ls -A'
alias l='ls -CF'

# My custom aliases
alias mdupdate='sh /home/justin/VSCodeRepos/mdoughtyDL/mdupdate.sh'
alias sysup='sudo apt update && sudo apt upgrade && flatpak update && chezmoi upgrade'
#TODO - Future version - alias sysup='sudo apt update && sudo apt upgrade -y && flatpak update && omz update && curl -sS https://starship.rs/install.sh | sh -s -- -y && chezmoi upgrade'
alias c='clear'
alias now='date +%T'
alias ports='ss -tulpn'
alias gh='history|grep' # Consider using fzf for better history search: plugins=(fzf)
alias lt='ls --human-readable --size -1 -S -F'
alias count='find . -type f | wc -l'
alias cm='chezmoi'

# ------------------------------------------------------------------------------
# 9. Third-Party Tool Integrations
# ------------------------------------------------------------------------------

# Command-not-found integration (if installed)
if [ -f /etc/zsh_command_not_found ]; then
    source /etc/zsh_command_not_found
fi

# Tilix terminal fix (if using Tilix/VTE-based terminal)
# If tilix warning persists ensure symlink "vte.sh -> /etc/profile.d/vte-2.91.sh" exists
if [ -n "$TILIX_ID" ] || [ -n "$VTE_VERSION" ]; then
    source /etc/profile.d/vte.sh
fi

# Conda Initialization (!! DO NOT MODIFY THIS BLOCK !!)
# This block is typically managed by `conda init`.
__conda_setup="$('/home/justin/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/justin/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/justin/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/justin/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<